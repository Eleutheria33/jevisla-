<?php

namespace Jevisla\MessagerieBundle\Repository;

use Jevisla\MessagerieBundle\Entity\Messages;

/**
 * MessagesRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessagesRepository extends \Doctrine\ORM\EntityRepository
{
    public function getLastMessage($idTwo, $Converse, $date)
    {
        return $this->createQueryBuilder('a')
            ->select('a.id', 'a.idUser', 'a.idConversation', 'a.message', 'a.dateCreation')
            ->where('a.dateCreation > :date')
            ->andWhere('a.idUser = :idTwo')
            ->andWhere('a.idConversation = :conv')
            ->setParameter('idTwo', $idTwo)
            ->setParameter('conv', $Converse)
            ->setParameter('date', $date)
            ->getQuery()
            ->getResult();
    }

    public function updateLusMessages($id, $convers, $em)
    {
        $queryBuilder = $em->createQueryBuilder();

        $queryBuilder->update(Messages::class, 'a')
            ->set('a.lu', 'true')
            ->Where('a.idUser = :idTwo AND a.idConversation = :conv')
            ->setParameter('idTwo', $id)
            ->setParameter('conv', $convers);

        $query = $queryBuilder->getQuery();

        return  $query->execute();
    }

    public function getNonLusMessages($idTwo, $Converse)
    {
        return $this->createQueryBuilder('a')
            ->select('count(a.id) as number')
            ->Where('a.idUser = :idTwo AND a.idConversation = :conv AND a.lu = false')
            ->setParameter('idTwo', $idTwo)
            ->setParameter('conv', $Converse)
            ->getQuery()
            ->getResult();
    }
}
